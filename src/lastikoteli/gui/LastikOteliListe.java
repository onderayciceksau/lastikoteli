/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lastikoteli.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Supplier;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import lastikoteli.utils.ButtonColumn;
import lastikoteli.utils.DBController;
import lastikoteli.utils.DepoRaflari;
import lastikoteli.utils.Depolar;
import lastikoteli.utils.LastikOtel;

/**
 *
 * @author imac
 */
public class LastikOteliListe extends javax.swing.JFrame {

    /**
     * Creates new form LastikOteliListe
     */
    public LastikOteliListe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        musteri = new javax.swing.JTextField();
        plaka = new javax.swing.JTextField();
        depo = new javax.swing.JComboBox<>();
        rafno = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lastik Oteli Liste");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Müşteri :");

        jLabel2.setText("Plaka   :");

        jLabel3.setText("Depo    :");

        jLabel4.setText("Raf No :");

        jButton1.setText("Listele");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(musteri, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rafno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plaka, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(musteri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plaka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(depo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rafno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Müşteri", "Lastik Markası", "Lastik Ebatı", "Lastik Tarihi", "Adet", "Plaka", "Depo", "RafNo.", "İşlem"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        Object[] items = new Object[1];
        items[0] = "Tümü";
        DefaultComboBoxModel rtdfcbM = new DefaultComboBoxModel(items);
        rafno.setModel(rtdfcbM);
        try {
            ArrayList<Object> listd = new ArrayList<>();
            listd.add(new String("Tümü"));
            listd.addAll(Arrays.asList(DBController.getInstance().getDepolar().stream().map((a) -> a.getDepo_adi()).toArray()));
            items = listd.toArray();
        } catch (SQLException e) {

        }
        DefaultComboBoxModel dfcbM = new DefaultComboBoxModel(items);
        depo.setModel(dfcbM);
        depo.addItemListener((ItemEvent arg0) -> {
            //Do Something
            try {
                String depo_adi = depo.getSelectedItem().toString();
                Object[] ritems = new Object[1];
                ritems[0] = "Tümü";
                if (!depo_adi.equalsIgnoreCase("tümü")) {
                    Depolar depo_obj = DBController.getInstance().getDepolar().stream().filter((a) -> a.getDepo_adi().equalsIgnoreCase(depo_adi)).findAny().orElseThrow(new Supplier<Exception>() {
                        @Override
                        public Exception get() {
                            return new Exception("Depo Eşleşmedi.");
                        }
                    });
                    ArrayList<Object> list = new ArrayList<>();
                    list.add(new String("Tümü"));
                    list.addAll(Arrays.asList(depo_obj.getDepo_raflari().stream().map((a) -> a.getRaf_adi()).toArray()));
                    ritems = list.toArray();
                }

                DefaultComboBoxModel rdfcbM = new DefaultComboBoxModel(ritems);
                rafno.setModel(rdfcbM);

            } catch (Exception e) {

                JOptionPane.showMessageDialog(this, "İşlem sırasında hata oluştu",
                        "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        });

    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Depolar depo_obj = null;
            DepoRaflari raf_obj = null;

            if (depo.getSelectedItem() != null) {
                String depo_adi = depo.getSelectedItem().toString();
                if (!depo_adi.equalsIgnoreCase("Tümü")) {
                    depo_obj = DBController.getInstance().getDepolar().stream().filter((a) -> a.getDepo_adi().equalsIgnoreCase(depo_adi)).findAny().orElseThrow(new Supplier<Exception>() {
                        @Override
                        public Exception get() {
                            return new Exception("Depo Eşleşmedi.");
                        }
                    });

                    if (rafno.getSelectedItem() != null) {
                        String raf_adi = rafno.getSelectedItem().toString();
                        if (!raf_adi.equalsIgnoreCase("Tümü")) {
                            raf_obj = depo_obj.getDepo_raflari().stream().filter((a) -> a.getRaf_adi().equalsIgnoreCase(raf_adi)).findAny().orElseThrow(new Supplier<Exception>() {
                                @Override
                                public Exception get() {
                                    return new Exception("Raf Eşleşmedi.");
                                }
                            });
                        }
                    }
                }
            }

            String musteri_str = musteri.getText();
            String plaka_str = plaka.getText();
            List<LastikOtel> liste = DBController.getInstance().getLastikOtelListe(musteri_str, plaka_str, depo_obj, raf_obj);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (;;) {
                try {
                    model.removeRow(0);
                } catch (ArrayIndexOutOfBoundsException e) {
                    break;
                }
            }
            liste.forEach((v) -> {
                Object[] rowdata = new Object[10];
                rowdata[1] = v.getMusteri().getAd() + " " + v.getMusteri().getSoyad();
                rowdata[2] = v.getLastik_marka().getMarka_adi();
                rowdata[3] = v.getLastik_taban() + " " + v.getLastik_yanak() + " R" + v.getLastik_cap();
                rowdata[4] = v.getLastik_tarihi();
                rowdata[5] = v.getAdet();
                rowdata[6] = v.getArac_plakasi();
                rowdata[7] = v.getRaf().getDepo().getDepo_adi();
                rowdata[8] = v.getRaf().getRaf_adi();
                rowdata[9] = "Çıkar";
                rowdata[0] = v.getId();
                model.addRow(rowdata);

            });
            Action delete = new AbstractAction() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JTable table = (JTable) e.getSource();
                    int modelRow = Integer.valueOf(e.getActionCommand());
                    DefaultTableModel model = ((DefaultTableModel) table.getModel());
                    try{
                    DBController.getInstance().OtelCikis(Integer.valueOf(model.getValueAt(modelRow, 0).toString()));
                    model.removeRow(modelRow);
                    }catch(Exception ex){
                                JOptionPane.showMessageDialog(LastikOteliListe.this, "İşlem sırasında hata oluştu",
                                "Error", JOptionPane.ERROR_MESSAGE);
                                ex.printStackTrace();
                    }
                }
            };

            ButtonColumn buttonColumn = new ButtonColumn(jTable1, delete, 9);
            buttonColumn.setMnemonic(KeyEvent.VK_D);
            jTable1.setFillsViewportHeight(true);
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "İşlem sırasında hata oluştu",
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> depo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField musteri;
    private javax.swing.JTextField plaka;
    private javax.swing.JComboBox<String> rafno;
    // End of variables declaration//GEN-END:variables
}
